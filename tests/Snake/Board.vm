function Board.new 2
push constant 16
call Memory.alloc 1
pop pointer 0
push this 0
call ConstBlock.LEFT 1
pop static 0
push this 0
call ConstBlock.RIGHT 1
pop static 1
push this 0
call ConstBlock.UP 1
pop static 2
push this 0
call ConstBlock.DOWN 1
pop static 3
push constant 5
pop static 4
push constant 6
pop static 5
push argument 2
pop this 10
push argument 3
pop this 11
push argument 5
pop this 13
push argument 6
pop this 12
push this 13
push constant 2
call Math.divide 2
pop this 14
push this 14
push constant 1
sub
pop this 15
push this 10
push this 11
call Math.multiply 2
pop this 2
push pointer 0
call Board.initrands 1
pop temp 0
push argument 7
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 7
pop this 5
label IF_FALSE0
push this 10
push this 11
call Math.multiply 2
call Array.new 1
pop this 1
call ConstBlock.new 0
pop this 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 2
lt
not
if-goto WHILE_END0
push local 0
push this 1
add
push static 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push argument 0
pop this 8
push argument 1
pop this 9
push this 9
push this 10
call Math.multiply 2
push this 8
add
pop local 1
push constant 0
pop local 0
push constant 0
not
call Screen.setColor 1
pop temp 0
label WHILE_EXP1
push local 0
push argument 4
lt
not
if-goto WHILE_END1
push local 1
push local 0
add
push this 1
add
push static 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 8
push local 0
add
push this 13
call Math.multiply 2
push this 12
add
push this 9
push this 13
call Math.multiply 2
push this 12
add
push this 8
push local 0
add
push constant 1
add
push this 13
call Math.multiply 2
push this 12
add
push constant 1
sub
push this 9
push constant 1
add
push this 13
call Math.multiply 2
push this 12
add
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push this 8
push argument 4
add
push constant 1
sub
pop this 6
push this 9
pop this 7
push pointer 0
return
function Board.initrands 0
push argument 0
pop pointer 0
push constant 10
call Array.new 1
pop this 3
push constant 0
push this 3
add
push constant 48
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 3
add
push constant 39
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 3
add
push constant 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 3
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 3
add
push constant 7
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push this 3
add
push constant 81
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push this 3
add
push constant 21
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push this 3
add
push constant 36
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push this 3
add
push constant 23
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push this 3
add
push constant 37
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop this 4
push constant 13
pop this 5
push constant 0
return
function Board.addApple 1
push argument 0
pop pointer 0
push this 5
push this 5
push constant 41
call Math.divide 2
push constant 41
call Math.multiply 2
sub
push this 4
push this 3
add
pop pointer 1
push that 0
call Math.multiply 2
pop this 5
push this 5
push this 5
push this 2
push constant 1
sub
call Math.divide 2
push this 2
push constant 1
sub
call Math.multiply 2
sub
pop this 5
push this 5
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 13
pop this 5
label IF_FALSE0
label WHILE_EXP0
push this 5
push this 1
add
pop pointer 1
push that 0
push static 5
eq
not
not
if-goto WHILE_END0
push this 5
push this 5
push constant 84
call Math.divide 2
push constant 84
call Math.multiply 2
sub
push this 4
push this 3
add
pop pointer 1
push that 0
call Math.multiply 2
pop this 5
push this 5
push this 5
push this 2
push constant 1
sub
call Math.divide 2
push this 2
push constant 1
sub
call Math.multiply 2
sub
pop this 5
push this 5
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 13
pop this 5
label IF_FALSE1
push this 4
push constant 1
add
pop this 4
push this 4
push constant 9
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop this 4
label IF_FALSE2
goto WHILE_EXP0
label WHILE_END0
push this 5
push this 1
add
push static 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 5
push this 10
call Math.divide 2
pop local 0
push this 5
push local 0
push this 10
call Math.multiply 2
sub
push this 13
call Math.multiply 2
push this 14
add
push this 12
add
push local 0
push this 13
call Math.multiply 2
push this 14
add
push this 12
add
push this 15
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Board.moveSnake 3
push argument 0
pop pointer 0
push this 7
push this 10
call Math.multiply 2
push this 6
add
push this 1
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push static 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 6
push constant 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 6
push constant 1
sub
pop this 6
goto IF_END1
label IF_FALSE1
push this 0
call ConstBlock.OUCH 1
return
label IF_END1
label IF_FALSE0
push argument 1
push static 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 6
push this 10
push constant 1
sub
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 6
push constant 1
add
pop this 6
goto IF_END3
label IF_FALSE3
push this 0
call ConstBlock.OUCH 1
return
label IF_END3
label IF_FALSE2
push argument 1
push static 2
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 7
push constant 0
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 7
push constant 1
sub
pop this 7
goto IF_END5
label IF_FALSE5
push this 0
call ConstBlock.OUCH 1
return
label IF_END5
label IF_FALSE4
push argument 1
push static 3
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 7
push this 11
push constant 1
sub
lt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 7
push constant 1
add
pop this 7
goto IF_END7
label IF_FALSE7
push this 0
call ConstBlock.OUCH 1
return
label IF_END7
label IF_FALSE6
push this 7
push this 10
call Math.multiply 2
push this 6
add
pop local 0
push local 0
push this 1
add
pop pointer 1
push that 0
pop local 1
push local 0
push this 1
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push static 2
eq
push local 1
push static 3
eq
or
push local 1
push static 1
eq
or
push local 1
push static 0
eq
or
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 0
call ConstBlock.OUCH 1
return
label IF_FALSE8
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 6
push this 13
call Math.multiply 2
push this 12
add
push this 7
push this 13
call Math.multiply 2
push this 12
add
push this 6
push constant 1
add
push this 13
call Math.multiply 2
push this 12
add
push constant 1
sub
push this 7
push constant 1
add
push this 13
call Math.multiply 2
push this 12
add
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
push local 1
push static 4
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push this 0
call ConstBlock.YAMI 1
return
goto IF_END9
label IF_FALSE9
push constant 0
call Screen.setColor 1
pop temp 0
push this 8
push this 13
call Math.multiply 2
push this 12
add
push this 9
push this 13
call Math.multiply 2
push this 12
add
push this 8
push constant 1
add
push this 13
call Math.multiply 2
push this 12
add
push constant 1
sub
push this 9
push constant 1
add
push this 13
call Math.multiply 2
push this 12
add
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
push this 9
push this 10
call Math.multiply 2
push this 8
add
pop local 2
push local 2
push this 1
add
pop pointer 1
push that 0
pop local 1
push local 1
push static 2
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push this 9
push constant 1
sub
pop this 9
label IF_FALSE10
push local 1
push static 3
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push this 9
push constant 1
add
pop this 9
label IF_FALSE11
push local 1
push static 0
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push this 8
push constant 1
sub
pop this 8
label IF_FALSE12
push local 1
push static 1
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push this 8
push constant 1
add
pop this 8
label IF_FALSE13
push local 2
push this 1
add
push static 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 0
call ConstBlock.OK 1
return
label IF_END9
function Board.dispose 0
push argument 0
pop pointer 0
push this 3
call Array.dispose 1
pop temp 0
push this 0
call ConstBlock.dispose 1
pop temp 0
push this 1
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
